#!/bin/bash

declare -A data
IFS=""
scriptname="$0"
#binary data
data["dotfiles"]="""
QlpoOTFBWSZTWU92jXUABVR/////////////////////////////////////////////4Bife116
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
"""

function embed
{
tmpself=`tempfile`
tmpselfembedded=`tempfile`
sed -e '/^data\[\"'$1'\"\]=\"\"\"$/,/^\"\"\"/d' < "$0" > "$tmpself"
sed -e '1,/^#binary\sdata/!d' < "$tmpself" > "$tmpselfembedded"
echo 'data["'$1'"]="""' >> "$tmpselfembedded"
cat "$2" | bzip2 -9 | base64 >> "$tmpselfembedded"
echo '"""' >> "$tmpselfembedded"
sed -e '1,/^#binary\sdata/d' < "$tmpself" >> "$tmpselfembedded"

mv "$tmpselfembedded" "$0"
chmod u+x "$0"
rm $tmpself
}
function backup
{
IFS=$'\n'
curpwd=`pwd`
tmpfile=`tempfile`

cd ~/
tar cvjf "$tmpfile" --files-from ~/.dotsave --ignore-failed-read
cd "$curpwd"
embed "dotfiles" "$tmpfile"
rm "$tmpfile"
}
function save
{
    if [ -n "$1" ]
    then
        grep -P "^data\[\"dotfiles\"\]=\"\"\"$" -q < "$0"
        if [ $? -eq 0 ]
        then
            echo ${data["dotfiles"]} | base64 -d | bzip2 -d > "$1"
        else
            echo "There is no data \"$1\""
        fi
    else
        echo "Please specify output file"
    fi
}
function restore
{
tmpfile=`tempfile`
save "$tmpfile"
cd ~
tar xvjf "$tmpfile"
rm "$tmpfile"

}
case "$1" in
    "backup")
    echo "backuping data..."
    backup
    ;;
    "restore")
    echo "restoring data..."
    restore
    ;;
    "save")
    save "$2"
    ;;
    "list")
    echo -n "datas: "
        for p in ${!data[@]}
        do
            echo -n "$p "
        done
        echo
    ;;
    *)
    echo "usage: $0 backup|restore|save|list"
    ;;
esac

