#!/bin/bash

declare -A data
IFS=""
scriptname="$0"
#binary data
data["dotfiles"]="""
QlpoOTFBWSZTWcwLrbsABV//////////////////////////////////////////////4Bi/M9Xd
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
FpV/4pgCb/8XckU4UJDMC627
"""

function embed
{
tmpself=`tempfile`
tmpselfembedded=`tempfile`
sed -e '/^data\[\"'$1'\"\]=\"\"\"$/,/^\"\"\"/d' < "$0" > "$tmpself"
sed -e '1,/^#binary\sdata/!d' < "$tmpself" > "$tmpselfembedded"
echo 'data["'$1'"]="""' >> "$tmpselfembedded"
cat "$2" | bzip2 -9 | base64 >> "$tmpselfembedded"
echo '"""' >> "$tmpselfembedded"
sed -e '1,/^#binary\sdata/d' < "$tmpself" >> "$tmpselfembedded"

mv "$tmpselfembedded" "$0"
chmod u+x "$0"
rm $tmpself
}
function backup
{
IFS=$'\n'
curpwd=`pwd`
tmpfile=`tempfile`

cd ~/
tar cvjf "$tmpfile" --files-from ~/.dotsave --ignore-failed-read
cd "$curpwd"
embed "dotfiles" "$tmpfile"
rm "$tmpfile"
}
function save
{
    if [ -n "$1" ]
    then
        grep -P "^data\[\"dotfiles\"\]=\"\"\"$" -q < "$0"
        if [ $? -eq 0 ]
        then
            echo ${data["dotfiles"]} | base64 -d | bzip2 -d > "$1"
        else
            echo "There is no data \"$1\""
        fi
    else
        echo "Please specify output file"
    fi
}
function restore
{
tmpfile=`tempfile`
save "$tmpfile"
cd ~
tar xvjf "$tmpfile"
rm "$tmpfile"

}
case "$1" in
    "backup")
    echo "backuping data..."
    backup
    ;;
    "restore")
    echo "restoring data..."
    restore
    ;;
    "save")
    save "$2"
    ;;
    "list")
    echo -n "datas: "
        for p in ${!data[@]}
        do
            echo -n "$p "
        done
        echo
    ;;
    *)
    echo "usage: $0 backup|restore|save|list"
    ;;
esac

